manifest {
	author = "Jeff Vierstra & Sergey Abramov"
	mainScript = "genotyping.nf"
	defaultBranch = "main"
	name = "genotyping-pipeline"
	description = "Genotyping pipeline from chromatin accessbility data"
	version = "1.0"
	nextflowVersion = "22.04.0"
}

// Run with a stricter shell, so errors are caught earlier
process.shell = ['/bin/bash', '-ueo','pipefail' ]

params {
	includeConfig './params.config'
}

profiles {
	//Pan-environment configuration; modify to computing enviroment specifications
	Altius {
		process {
			executor = "slurm"
			queue = "queue0,pool,bigmem"
			memory = { 100.GB + (50.GB * task.attempt) }
			cache = "lenient" // may need to switch to deep
			errorStrategy = 'retry'
			maxRetries = 3
			beforeScript = "ulimit -n 32000"
		}
		
		executor {
			$slurm {
				queueSize = 100
			}
		}

		// Logging
		//trace.enabled = true
		//trace.file = "pipeline_trace.txt"
		//timeline.enabled = true
		//timeline.file = "pipeline_timeline.html"
		//report.enabled = true
		//report.file = "pipeline_report.html"
	}
	encode4 {
		process {
			executor = "slurm"
			queue = "encode4"
			memory = { 30.GB * task.attempt }
			cache = "lenient" // may need to switch to deep
			errorStrategy = { (task.exitStatus == 143 || task.exitStatus == 137) ? 'retry' : 'terminate' }
			maxRetries = 3
			beforeScript = "ulimit -n 32000"
		}
		
		executor {
			$slurm {
				queueSize = 100
			}
		}

		// Logging
		//trace.enabled = true
		//trace.file = "pipeline_trace.txt"
		//timeline.enabled = true
		//timeline.file = "pipeline_timeline.html"
		//report.enabled = true
		//report.file = "pipeline_report.html"
	}
}
